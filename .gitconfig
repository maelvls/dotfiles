[user]
    name = MaÃ«l Valais
    email = mael@vls.dev
    signingkey = 27F4C016
[color]
    diff = auto
    status = auto
    branch = auto
    ui = true
[alias]
    # https://stackoverflow.com/questions/65763211/a-git-alias-to-accept-both-main-and-master-branch-names/67284322#67284322
    m = !git switch $(test -f .git/refs/remotes/origin/main && echo main || echo master)
    ls = for-each-ref --count=5 --sort=-committerdate refs/heads/ --format='%(color:bold)%(HEAD)%(color:reset) %(refname:short)%(color:reset) - %(color:yellow)%(authorname)%(color:reset), %(color:green)%(committerdate:relative)%(color:reset)'
    ll = for-each-ref --sort=-committerdate refs/heads/ --format='%(color:bold)%(HEAD)%(color:reset) %(refname:short)%(color:reset) - %(color:yellow)%(authorname)%(color:reset), %(color:green)%(committerdate:relative)%(color:reset)'
    cia = commit --amend
    f = !git branch -vv --color=always | fzf --ansi | sed 's:^[\\* ]*::' | cut -d' ' -f1 | xargs git checkout
    hg = hg-helper
    fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
    edit = !nvim $(git rev-parse --show-toplevel)/.git/config
    # -C HEAD == --reuse-message of HEAD
    amend = commit -a --amend
    recommit = commit -a --amend -C HEAD
    cp = cherry-pick
    bs = bisect
    ci = commit
    co = checkout
    st = status
    br = branch
    rb = rebase
    rs = reset
    sw = switch
    pushtrack = push -u origin HEAD
    lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) %C(bold green)(%<(8,trunc)%ar)%C(reset) %C(white)%w()%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
    lg = !git lg1
    lg = log --graph --abbrev-commit --abbrev=6 --decorate --format=format:'%C(bold blue)%h%C(reset): %C(white)%s%C(reset)' --all
    dsf = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy 2>/dev/null | less --tabs=4 -RFX; }; f"
    sync = !git pull && git push
    dci = duet-commit
    dcia = duet-commit --amend
    drv = duet-revert
    dmg = duet-merge
    drb = rebase -i --exec 'git duet-commit --amend'
    ldiff = difftool -t latex
    ignore-io = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"
    lg3 = log --graph --pretty=format:'%Cred%h%Creset -%Cblue%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    dig = !git log --date-order --all @ $(git reflog show --format=\"%h\" stash) $(git reflog show --format=\"%h\")
    json = !git log --pretty=format:'{%n  \"commit\": \"%H\",%n  \"abbreviated_commit\": \"%h\",%n  \"tree\": \"%T\",%n  \"abbreviated_tree\": \"%t\",%n  \"parent\": \"%P\",%n  \"abbreviated_parent\": \"%p\",%n  \"refs\": \"%D\",%n  \"encoding\": \"%e\",%n  \"subject\": \"%s\",%n  \"sanitized_subject_line\": \"%f\",%n  \"body\": \"%B\",%n  \"commit_notes\": \"%N\",%n  \"verification_flag\": \"%G?\",%n  \"signer\": \"%GS\",%n  \"signer_key\": \"%GK\",%n  \"author\": {%n    \"name\": \"%aN\",%n    \"email\": \"%aE\",%n    \"date\": \"%aD\"%n  },%n  \"commiter\": {%n    \"name\": \"%cN\",%n    \"email\": \"%cE\",%n    \"date\": \"%cD\"%n  }%n},'
    duetedit = !${EDITOR:-vim} ~/.git-authors
[web]
    browser = chrome
[filter "media"]
    clean = git-media-clean %f
    smudge = git-media-smudge %f
[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true
[difftool.latex]
    cmd = git-latexdiff \"$LOCAL\" \"$REMOTE\"
[rerere]
    enabled = true
    autoupdate = true
[merge]
    tool = vimdiff
    conflictstyle = merge
[mergetool]
    prompt = false
[diff]
    tool = default-difftool
[difftool "default-difftool"]
    cmd = code --wait --diff $LOCAL $REMOTE
#[log]
#    decorate = auto
#    oneline = true
#    abbrevCommit = true
#[format]
# pretty = oneline
[push]
    default = simple
[branch]
    autosetuprebase = always
[status]
    showUntrackedFiles = all
[pull]
    rebase = merges
[gc]
    autoDetach = false
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
[rebase]
    autostash = true
    abbreviateCommands = true
[commit]
    verbose = true
    gpgsign = false
[gpg]
    program = gpg
[credential]
    helper = lastpass -l mael.valais@gmail.com
[init]
    defaultBranch = main
[core]
    excludesfile = ~/.gitignore

[pager]
    diff = delta
    log = delta
    reflog = delta
    show = delta

[interactive]
    diffFilter = delta --color-only
[delta]
    features = "torarnv-style"
    hunk-header-line-number-style = bold black
    hunk-header-file-style = magenta
    hunk-header-decoration-style = omit
    file-style = omit

#[delta]
#    plus-style = "syntax #012800"
#    minus-style = "syntax #340001"
#    syntax-theme = Monokai Extended
#    navigate = true
[delta "torarnv-style"]
    syntax-theme = OneHalfDark
    line-numbers = false

    hunk-header-style = file line-number syntax
    file-style = magenta omit
    file-modified-label = modified:

    hunk-header-decoration-style = bold black omit

    zero-style                    = dim syntax

    minus-style                   = bold red
    minus-non-emph-style          = dim red
    minus-emph-style              = bold red 52
    minus-empty-line-marker-style = normal "#3f0001"

    plus-style                    = bold green
    plus-non-emph-style           = dim green
    plus-emph-style               = bold green 22
    plus-empty-line-marker-style  = normal "#002800"

    whitespace-error-style        = reverse red
[interactive]
    diffFilter = delta --color-only
[diff "spaceman-diff"]
    command = spaceman-diff

[maintenance]
    repo = /Users/mvalais/code/cert-manager
